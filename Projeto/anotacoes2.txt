{style: function(feature){
      return{
                    weight: 2,
                    opacity: 1,
                    color: 'white',
                    dashArray: '3',
                    fillOpacity: 0.1};
    }}


, {
      pointToLayer: function (feature, latlng) {
        return L.circleMarker(latlng, {
          radius: 4,
          fillColor: "steelblue",
          color: "#fff",
          weight: 1,
          opacity: 1,
          fillOpacity: 0.8
        })
        
      }
    }


/*var nycChart= dc.leafletChoroplethChart("#map","meugrupo");
            nycChart.dimension(dimLandUse)
            .group(weaponDimLandUse)
            .width(600)
            .height(400)
            .center([40.766266,-73.9796567])
            .zoom(12)
            .geojson(features);*/
      /*dc.leafletChoroplethChart("#map","meugrupo")
      .dimension(dimLandUse)
      .group(weaponDimLandUse)
      .width(600)
      .height(400)
      .center([40.766266,-73.9796567])
      .zoom(7)
      .geojson(features)
      .colors(['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'])
      .colorDomain(function() {
        return [dc.utils.groupMin(this.group(), this.valueAccessor()),
         dc.utils.groupMax(this.group(), this.valueAccessor())];
      })
      .colorAccessor(function(d,i) {
        console.log(d.value);
        return d.value;
      })
      .featureKeyAccessor(function(feature) {
        return feature.properties.BBL;
      })
      .renderPopup(true)
      .popup(function(d,feature) {
        return feature.properties.nameEn+" : "+d.value;
      }); */



 //var nycChart= dc.leafletChoroplethChart("#map");
      //.dimension(dimLandUse)
      //.group(weaponDimLandUse)
      //.width(600)
      //.height(400)
      //.center([42.69,25.42])
      //.zoom(7)
      //.geojson(features)
     /* .colors(['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'])
      .colorDomain(function() {
        return [dc.utils.groupMin(this.group(), this.valueAccessor()),
         dc.utils.groupMax(this.group(), this.valueAccessor())];
      })
      .colorAccessor(function(d,i) {
        return d.value;
      })
      .featureKeyAccessor(function(feature) {
        return feature.properties.BBL;
      });*/  



